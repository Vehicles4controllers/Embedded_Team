Archive member included because of file (symbol)

c:/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              c:/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o (exit)
c:/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                              ./SEVSEG_program.o (__do_copy_data)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
LOAD ./DIO_program.o
LOAD ./SEVSEG_program.o
LOAD ./UART_program.o
LOAD ./main.o
LOAD c:/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD c:/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD c:/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x63a
 *(.vectors)
 .vectors       0x00000000       0x54 c:/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 c:/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc c:/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x16 c:/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                0x00000060                __do_copy_data
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000076        0x8 c:/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x0000007e        0x4 c:/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x0000007e                __vector_1
                0x0000007e                __vector_12
                0x0000007e                __bad_interrupt
                0x0000007e                __vector_6
                0x0000007e                __vector_3
                0x0000007e                __vector_11
                0x0000007e                __vector_13
                0x0000007e                __vector_17
                0x0000007e                __vector_19
                0x0000007e                __vector_7
                0x0000007e                __vector_5
                0x0000007e                __vector_4
                0x0000007e                __vector_9
                0x0000007e                __vector_2
                0x0000007e                __vector_15
                0x0000007e                __vector_8
                0x0000007e                __vector_14
                0x0000007e                __vector_10
                0x0000007e                __vector_16
                0x0000007e                __vector_18
                0x0000007e                __vector_20
 .text          0x00000082        0x0 ./DIO_program.o
 .text          0x00000082        0x0 ./SEVSEG_program.o
 .text          0x00000082        0x0 ./UART_program.o
 .text          0x00000082        0x0 ./main.o
 .text          0x00000082        0x0 c:/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text          0x00000082        0x0 c:/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                0x00000082                . = ALIGN (0x2)
 *(.text.*)
 .text.MDIO_voidInit
                0x00000082       0x14 ./DIO_program.o
                0x00000082                MDIO_voidInit
 .text.MDIO_voidSetPinDirection
                0x00000096       0xf0 ./DIO_program.o
                0x00000096                MDIO_voidSetPinDirection
 .text.MDIO_voidSetPinValue
                0x00000186       0xf0 ./DIO_program.o
                0x00000186                MDIO_voidSetPinValue
 .text.MDIO_voidTogglePinValue
                0x00000276       0x6e ./DIO_program.o
                0x00000276                MDIO_voidTogglePinValue
 .text.MDIO_u8GetPinValue
                0x000002e4       0x38 ./DIO_program.o
                0x000002e4                MDIO_u8GetPinValue
 .text.MDIO_voidSetPortDirection
                0x0000031c       0x22 ./DIO_program.o
                0x0000031c                MDIO_voidSetPortDirection
 .text.MDIO_voidSetPortValue
                0x0000033e       0x22 ./DIO_program.o
                0x0000033e                MDIO_voidSetPortValue
 .text.MDIO_voidTogglePortValue
                0x00000360       0x32 ./DIO_program.o
                0x00000360                MDIO_voidTogglePortValue
 .text.MDIO_u8GetPortValue
                0x00000392       0x24 ./DIO_program.o
                0x00000392                MDIO_u8GetPortValue
 .text.HSEVSEG_voidDisplay
                0x000003b6       0x30 ./SEVSEG_program.o
                0x000003b6                HSEVSEG_voidDisplay
 .text.MUART_voidClearDataRegister
                0x000003e6        0x4 ./UART_program.o
                0x000003e6                MUART_voidClearDataRegister
 .text.MUART_voidEnableInterrupt
                0x000003ea       0x1a ./UART_program.o
                0x000003ea                MUART_voidEnableInterrupt
 .text.MUART_voidDisableInterrupt
                0x00000404       0x1a ./UART_program.o
                0x00000404                MUART_voidDisableInterrupt
 .text.MUART_u8GetRXCompleteFlag
                0x0000041e        0xa ./UART_program.o
                0x0000041e                MUART_u8GetRXCompleteFlag
 .text.MUART_u8GetTXCompleteFlag
                0x00000428        0xc ./UART_program.o
                0x00000428                MUART_u8GetTXCompleteFlag
 .text.MUART_u8GetDataRegisterEmptyFlag
                0x00000434        0xa ./UART_program.o
                0x00000434                MUART_u8GetDataRegisterEmptyFlag
 .text.MUART_u8GetFrameErrorFlag
                0x0000043e        0x8 ./UART_program.o
                0x0000043e                MUART_u8GetFrameErrorFlag
 .text.MUART_u8GetDataOverRunFlag
                0x00000446        0xc ./UART_program.o
                0x00000446                MUART_u8GetDataOverRunFlag
 .text.MUART_u8GetParityErrorFlag
                0x00000452        0xa ./UART_program.o
                0x00000452                MUART_u8GetParityErrorFlag
 .text.MUART_voidClearTXCompleteFlag
                0x0000045c        0x4 ./UART_program.o
                0x0000045c                MUART_voidClearTXCompleteFlag
 .text.MUART_voidEnableDoubleSpeed
                0x00000460        0x4 ./UART_program.o
                0x00000460                MUART_voidEnableDoubleSpeed
 .text.MUART_voidDisableDoubleSpeed
                0x00000464        0x4 ./UART_program.o
                0x00000464                MUART_voidDisableDoubleSpeed
 .text.MUART_voidEnableMultiProcessor
                0x00000468        0x4 ./UART_program.o
                0x00000468                MUART_voidEnableMultiProcessor
 .text.MUART_voidDisableMultiProcessor
                0x0000046c        0x4 ./UART_program.o
                0x0000046c                MUART_voidDisableMultiProcessor
 .text.MUART_u8RXChar
                0x00000470        0x8 ./UART_program.o
                0x00000470                MUART_u8RXChar
 .text.MUART_voidSendDataSynch
                0x00000478       0x14 ./UART_program.o
                0x00000478                MUART_voidSendDataSynch
 .text.MUART_voidReceiveDataSynch
                0x0000048c       0x34 ./UART_program.o
                0x0000048c                MUART_voidReceiveDataSynch
 .text.MUART_voidReceiveDataSynchWithDataLength
                0x000004c0       0x14 ./UART_program.o
                0x000004c0                MUART_voidReceiveDataSynchWithDataLength
 .text.MUART_u8ReceiveDataConditional
                0x000004d4       0x12 ./UART_program.o
                0x000004d4                MUART_u8ReceiveDataConditional
 .text.MUART_voidInit
                0x000004e6       0x26 ./UART_program.o
                0x000004e6                MUART_voidInit
 .text.voidOnGreenLight
                0x0000050c       0x20 ./main.o
                0x0000050c                voidOnGreenLight
 .text.voidOnYellowLight
                0x0000052c       0x20 ./main.o
                0x0000052c                voidOnYellowLight
 .text.voidOnRedLight
                0x0000054c       0x20 ./main.o
                0x0000054c                voidOnRedLight
 .text.voidInit
                0x0000056c       0x30 ./main.o
                0x0000056c                voidInit
 .text.main     0x0000059c       0x9a ./main.o
                0x0000059c                main
 .text.libgcc   0x00000636        0x0 c:/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x00000636        0x0 c:/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                0x00000636                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000636        0x0 c:/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x00000636                exit
                0x00000636                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000636        0x4 c:/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x0000063a                _etext = .

.data           0x00800060        0xe load address 0x0000063a
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .data          0x00800060        0x0 ./DIO_program.o
 .data          0x00800060        0x0 ./SEVSEG_program.o
 .data          0x00800060        0x0 ./UART_program.o
 .data          0x00800060        0x4 ./main.o
 .data          0x00800064        0x0 c:/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .data          0x00800064        0x0 c:/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 .rodata.arru87Seg
                0x00800064        0xa ./SEVSEG_program.o
                0x00800064                arru87Seg
 *(.gnu.linkonce.d*)
                0x0080006e                . = ALIGN (0x2)
                0x0080006e                _edata = .
                0x0080006e                PROVIDE (__data_end, .)

.bss            0x0080006e        0x0
                0x0080006e                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0080006e        0x0 c:/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .bss           0x0080006e        0x0 ./DIO_program.o
 .bss           0x0080006e        0x0 ./SEVSEG_program.o
 .bss           0x0080006e        0x0 ./UART_program.o
 .bss           0x0080006e        0x0 ./main.o
 .bss           0x0080006e        0x0 c:/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .bss           0x0080006e        0x0 c:/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 *(.bss*)
 *(COMMON)
                0x0080006e                PROVIDE (__bss_end, .)
                0x0000063a                __data_load_start = LOADADDR (.data)
                0x00000648                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080006e        0x0
                0x0080006e                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080006e                PROVIDE (__noinit_end, .)
                0x0080006e                _end = .
                0x0080006e                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(Traffic_Light_Unit.elf elf32-avr)
LOAD linker stubs
